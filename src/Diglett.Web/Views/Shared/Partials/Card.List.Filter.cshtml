@using Diglett.Core.Catalog.Cards
@using Diglett.Web.Models.Catalog

@model IListActions

@{
    var currentCategory = Model.CurrentCategory;
    var categories = Enum.GetValues(typeof(Category))
        .Cast<Category>()
        .Select(c => new { Name = c.ToString(), Value = c })
        .ToList();
}

<form id="search-form" class="d-flex" role="search">
    <input type="search" name="q" value="@Model.SearchTerm"
           class="form-control me-2"
           placeholder="Search cards..."
           aria-label="Search cards..." />
    <button class="btn btn-outline-success" type="submit">Search</button>
</form>

<div class="btn-group">
    <a href="@WebHelper.ModifyQueryString(null, null, "c")"
       class="btn btn-outline-primary"
       attr-class='(currentCategory == null, "active")'>All</a>
    @foreach (var category in categories)
    {
        <a href="@WebHelper.ModifyQueryString(null, $"?c={(int)category.Value}", "i")"
           class="btn btn-outline-primary"
           attr-class='(currentCategory == category.Value, "active")'>@category.Name</a>
    }
</div>

<script>
    document.getElementById('search-form').addEventListener('submit', function (e) {
        e.preventDefault();

        var form = e.target;
        var currentParams = new URLSearchParams(window.location.search);
        var formData = new FormData(form);

        for (var [key, value] of formData.entries()) {
            currentParams.set(key, value);
        }

        currentParams.delete('i');
        window.location.search = currentParams.toString();
    });
</script>